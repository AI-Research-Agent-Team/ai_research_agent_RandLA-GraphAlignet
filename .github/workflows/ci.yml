name: CI for RandLA-GraphAlignet

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          python dependencies.py

      - name: Run component tests
        run: |
          python RandLA_GraphAlignNet.py
          python GraphSemanticProjector.py
          python annotate_multilingual.py
          python evaluate_alignment.py

      - name: Validate graph consistency
        run: |
          python -c "
          from evaluate_alignment import demo_evaluation_harness
          evaluator, metrics, results = demo_evaluation_harness()
          assert metrics.graph_consistency > 0.5
          assert metrics.multilingual_accuracy > 0.5
          print('âœ… All validation checks passed')
          "
job:
   neo4j-connector:
    - name: Connect to Neo4j and push annotations
      run: |
        python annotate_multilingual.py
        python neo4j_connector.py
        
    env:
        NEO4J_URI: ${{ secrets.NEO4J_URI }}
        NEO4J_USER: ${{ secrets.NEO4J_USER }}
        NEO4J_PASS: ${{ secrets.NEO4J_PASS }}


 # - name: Generate RDF triples
  #  run: python scripts/export_rdf.py

  
  - name: Run SPARQL queries
  run: python scripts/query_sparql.py
*/
